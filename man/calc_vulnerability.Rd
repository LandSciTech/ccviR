% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_vulnerability.R
\name{calc_vulnerability}
\alias{calc_vulnerability}
\title{Calculate the vulnerability index score}
\usage{
calc_vulnerability(spat_df, vuln_df, tax_grp, n_rnds = 1000)
}
\arguments{
\item{spat_df}{data.frame of spatial inputs produced by \code{analyze_spatial}}

\item{vuln_df}{data.frame of answers to vulnerability questions. The format
must match \code{\link{make_vuln_df}}.}

\item{tax_grp}{taxonomic group of the species. Must match one of the options
below}

\item{n_rnds}{number of Monte Carlo repetitions for determining variability
when multiple values are given for a factor}
}
\value{
A data.frame with 1 row per scenario and columns:
\describe{
\item{scenario_name}{Name identifying the scenario}
\item{index}{The index value as a string. EV: Extremely Vulnerable,
HV: Highly Vulnerable, MV: Moderately Vulnerable, LV: Less Vulnerable,
IE: Insufficient Evidence}
\item{conf_index}{An index of the confidence in the index based on the
monte carlo. Options are Low, Moderate, High, Very High or Insufficient Evidence.}
\item{mc_results}{A data.frame with the b_c_score, d_score, and index for each monte carlo repitition}
\item{mig_exp}{An index of the migratory exposure. Options are Low, Moderate, High, or "N/A"}
\item{d_score}{Total score from section D the modelled response to climate change section}
\item{b_c_score}{Total score from sections B and C the indirect exposure, sensitivity and adaptive capacity sections}
\item{vuln_df}{Answers to each question plus any comments. Numerical scores correspond to:
-1) Unknown, 0) Neutral, 1) Somewhat increase, 2) Increase, 3) Greatly increase.
If there are 2 numbers then two boxes were checked and the average of the scores
was used in the total score}
\item{n_b_factors}{Number of factors scored in section B}
\item{n_c_factors}{Number of factors scored in section C}
\item{n_d_factors}{Number of factors scored in section D}
\item{slr_vuln}{Whether the species' vulnerability to sea level rise and dispersal limitations led to an index of EV}
}
}
\description{
Calculate the NatureServe Climate Change Vulnerability Index from the
completed inputs.
}
\details{
Options for \code{tax_grp} are Vascular Plant, Nonvascular Plant, Lichen,
Invert-Insect, Invert-Mollusk, Invert-Other, Fish, Amphibian, Reptile,
Mammal, Bird
}
\examples{
# Setup
library(sf)
base_pth <- system.file("extdata", package = "ccviR")
scn_nms <- c("RCP 4.5", "RCP 8.5") # scenario names

clim_vars <- get_clim_vars(file.path(base_pth, "clim_files/processed"),
                           scenario_names = scn_nms)

spat_res <- analyze_spatial(
  range_poly = read_sf(file.path(base_pth, "rng_poly.shp"), agr = "constant"),
  scale_poly = read_sf(file.path(base_pth, "assess_poly.shp"), agr = "constant"),
  clim_vars_lst = clim_vars,
  hs_rast = terra::rast(c(file.path(base_pth, "rng_chg_45.tif"),
   file.path(base_pth, "rng_chg_85.tif"))),
  hs_rcl = matrix(c(-1, 0, 1, 1, 2, 3), ncol = 2),
  scenario_names = scn_nms
)

# vulnerability factor table with score 1 (somewhat increase vulnerability)
# for all factors
vuln <- make_vuln_df("test_species", val1 = 1, mig = 1)

v <- calc_vulnerability(spat_res$spat_table, vuln, "Bird")

# With protected areas

spat_res <- analyze_spatial(
  range_poly = read_sf(file.path(base_pth, "rng_poly.shp"), agr = "constant"),
  scale_poly = read_sf(file.path(base_pth, "assess_poly.shp"), agr = "constant"),
  protected_poly = read_sf(file.path(base_pth, "protected_areas.shp")),
  hs_rast = terra::rast(c(file.path(base_pth, "rng_chg_45.tif"),
                          file.path(base_pth, "rng_chg_85.tif"))),
  clim_vars_lst = clim_vars,
  hs_rcl = matrix(c(-1, 0, 1, 1, 2, 3), ncol = 2),
  scenario_names = scn_nms
)

# Fill in vulnerability Questions
vuln <- make_vuln_df("test_species")
vuln$Value1[3:19] <- c(0, 0, 1, 0, -1, -1, -1, -1, 0, 0, 1, 0, 0, 1, 0, 0, 0)

# include a second value to reflect uncertainty and trigger a monte carlo to
# determine confidence
vuln$Value2[3:5] <- c(2, 0, 0)

v <- calc_vulnerability(spat_res$spat_table, vuln, "Bird")
v$vuln_df[[1]] \%>\% print(n = Inf)
}
